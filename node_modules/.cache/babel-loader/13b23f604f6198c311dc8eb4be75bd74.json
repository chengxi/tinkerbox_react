{"ast":null,"code":"var _jsxFileName = \"/Users/xicheng/lab/git/fv_nav/src/Participant.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({\n  participant\n}) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = trackMap => Array.from(trackMap.values()).map(publication => publication.track).filter(track => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    const trackSubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"participant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, participant.identity), /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioRef,\n    autoPlay: true,\n    muted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Participant;","map":{"version":3,"sources":["/Users/xicheng/lab/git/fv_nav/src/Participant.js"],"names":["React","useState","useEffect","useRef","Participant","participant","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","on","removeAllListeners","videoTrack","attach","current","detach","audioTrack","identity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n  return (\n    <div className=\"participant\">\n      <h3>{participant.identity}</h3>\n      <video ref={videoRef} autoPlay={true} />\n      <audio ref={audioRef} autoPlay={true} muted={true} />\n    </div>\n  );\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}