{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _require = require('events'),\n    EventEmitter = _require.EventEmitter;\n\nvar _require2 = require('../twilioconnection'),\n    LOCAL = _require2.CloseReason.LOCAL;\n\nvar GROUPS = {\n  SIGNALING: 'signaling'\n};\nvar LEVELS = {\n  DEBUG: 'debug',\n  ERROR: 'error',\n  INFO: 'info',\n  WARNING: 'warning'\n};\nvar eventNamesToGroups = {\n  closed: GROUPS.SIGNALING,\n  connecting: GROUPS.SIGNALING,\n  early: GROUPS.SIGNALING,\n  open: GROUPS.SIGNALING,\n  waiting: GROUPS.SIGNALING\n};\nvar eventNamesToLevels = {\n  closed: function closed(payload) {\n    return payload.reason === LOCAL ? LEVELS.INFO : LEVELS.ERROR;\n  },\n  connecting: LEVELS.INFO,\n  early: LEVELS.INFO,\n  open: LEVELS.INFO,\n  waiting: LEVELS.WARNING\n};\n/**\n * EventObserver listens to SDK events and re-emits them on the\n * @link EventListener} with some additional information.\n * @extends EventEmitter\n * @emits EventObserver#event\n */\n\nvar EventObserver = function (_EventEmitter) {\n  _inherits(EventObserver, _EventEmitter);\n  /**\n   * Constructor.\n   * @param {number} connectTimestamp\n   * @param {EventListener} eventListener\n   */\n\n\n  function EventObserver(connectTimestamp) {\n    var eventListener = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, EventObserver);\n\n    var _this = _possibleConstructorReturn(this, (EventObserver.__proto__ || Object.getPrototypeOf(EventObserver)).call(this));\n\n    if (eventListener) {\n      _this.on('event', function (_ref) {\n        var name = _ref.name,\n            payload = _ref.payload;\n        var timestamp = Date.now();\n        var elapsedTime = timestamp - connectTimestamp;\n        var group = eventNamesToGroups[name];\n        var level = typeof eventNamesToLevels[name] === 'function' ? eventNamesToLevels[name](payload) : eventNamesToLevels[name];\n        var event = Object.assign(payload ? {\n          payload: payload\n        } : {}, {\n          elapsedTime: elapsedTime,\n          group: group,\n          level: level,\n          name: name,\n          timestamp: timestamp\n        });\n        eventListener.emit('event', event);\n      });\n    }\n\n    return _this;\n  }\n\n  return EventObserver;\n}(EventEmitter);\n/**\n * An SDK event.\n * @event EventObserver#event\n * @param {{name: string, payload: *}} event\n */\n\n\nmodule.exports = EventObserver;","map":{"version":3,"sources":["/Users/xicheng/lab/git/fv_nav/node_modules/twilio-video/es5/util/eventobserver.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_require","require","EventEmitter","_require2","LOCAL","CloseReason","GROUPS","SIGNALING","LEVELS","DEBUG","ERROR","INFO","WARNING","eventNamesToGroups","closed","connecting","early","open","waiting","eventNamesToLevels","payload","reason","EventObserver","_EventEmitter","connectTimestamp","eventListener","arguments","length","undefined","_this","getPrototypeOf","on","_ref","name","timestamp","Date","now","elapsedTime","group","level","event","assign","emit","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('events'),\n    EventEmitter = _require.EventEmitter;\n\nvar _require2 = require('../twilioconnection'),\n    LOCAL = _require2.CloseReason.LOCAL;\n\nvar GROUPS = {\n  SIGNALING: 'signaling'\n};\n\nvar LEVELS = {\n  DEBUG: 'debug',\n  ERROR: 'error',\n  INFO: 'info',\n  WARNING: 'warning'\n};\n\nvar eventNamesToGroups = {\n  closed: GROUPS.SIGNALING,\n  connecting: GROUPS.SIGNALING,\n  early: GROUPS.SIGNALING,\n  open: GROUPS.SIGNALING,\n  waiting: GROUPS.SIGNALING\n};\n\nvar eventNamesToLevels = {\n  closed: function closed(payload) {\n    return payload.reason === LOCAL ? LEVELS.INFO : LEVELS.ERROR;\n  },\n\n  connecting: LEVELS.INFO,\n  early: LEVELS.INFO,\n  open: LEVELS.INFO,\n  waiting: LEVELS.WARNING\n};\n\n/**\n * EventObserver listens to SDK events and re-emits them on the\n * @link EventListener} with some additional information.\n * @extends EventEmitter\n * @emits EventObserver#event\n */\n\nvar EventObserver = function (_EventEmitter) {\n  _inherits(EventObserver, _EventEmitter);\n\n  /**\n   * Constructor.\n   * @param {number} connectTimestamp\n   * @param {EventListener} eventListener\n   */\n  function EventObserver(connectTimestamp) {\n    var eventListener = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, EventObserver);\n\n    var _this = _possibleConstructorReturn(this, (EventObserver.__proto__ || Object.getPrototypeOf(EventObserver)).call(this));\n\n    if (eventListener) {\n      _this.on('event', function (_ref) {\n        var name = _ref.name,\n            payload = _ref.payload;\n\n        var timestamp = Date.now();\n        var elapsedTime = timestamp - connectTimestamp;\n        var group = eventNamesToGroups[name];\n\n        var level = typeof eventNamesToLevels[name] === 'function' ? eventNamesToLevels[name](payload) : eventNamesToLevels[name];\n\n        var event = Object.assign(payload ? { payload: payload } : {}, {\n          elapsedTime: elapsedTime,\n          group: group,\n          level: level,\n          name: name,\n          timestamp: timestamp\n        });\n\n        eventListener.emit('event', event);\n      });\n    }\n    return _this;\n  }\n\n  return EventObserver;\n}(EventEmitter);\n\n/**\n * An SDK event.\n * @event EventObserver#event\n * @param {{name: string, payload: *}} event\n */\n\nmodule.exports = EventObserver;"]},"metadata":{},"sourceType":"script"}