{"ast":null,"code":"var _jsxFileName = \"/Users/xicheng/lab/git/fv_nav/src/VideoChat.js\";\nimport React, { useState, useCallback } from 'react';\nimport Lobby from './Lobby';\nimport Room from './Room';\n\nconst VideoChat = () => {\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [token, setToken] = useState(null);\n  const handleUsernameChange = useCallback(event => {\n    setUsername(event.target.value);\n  }, []);\n  const handleRoomNameChange = useCallback(event => {\n    setRoomName(event.target.value);\n  }, []);\n  const handleSubmit = useCallback(async event => {\n    event.preventDefault();\n    console.log('submit');\n    const data = await fetch('/video/token', {\n      method: 'POST',\n      body: JSON.stringify({\n        identity: username,\n        room: roomName\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json());\n    setToken(data.token);\n  }, [roomName, username]);\n  const handleLogout = useCallback(event => {\n    setToken(null);\n  }, []);\n  let render;\n\n  if (token) {\n    render = /*#__PURE__*/React.createElement(Room, {\n      roomName: roomName,\n      token: token,\n      handleLogout: handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    });\n  } else {\n    render = /*#__PURE__*/React.createElement(Lobby, {\n      username: username,\n      roomName: roomName,\n      handleUsernameChange: handleUsernameChange,\n      handleRoomNameChange: handleRoomNameChange,\n      handleSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return render;\n};\n\nexport default VideoChat;","map":{"version":3,"sources":["/Users/xicheng/lab/git/fv_nav/src/VideoChat.js"],"names":["React","useState","useCallback","Lobby","Room","VideoChat","username","setUsername","roomName","setRoomName","token","setToken","handleUsernameChange","event","target","value","handleRoomNameChange","handleSubmit","preventDefault","console","log","data","fetch","method","body","JSON","stringify","identity","room","headers","then","res","json","handleLogout","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMW,oBAAoB,GAAGV,WAAW,CAACW,KAAK,IAAI;AAChDN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC;AAIA,QAAMC,oBAAoB,GAAGd,WAAW,CAACW,KAAK,IAAI;AAChDJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC;AAIA,QAAME,YAAY,GAAGf,WAAW,CAC9B,MAAMW,KAAN,IAAe;AACbA,IAAAA,KAAK,CAACK,cAAN;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,cAAD,EAAiB;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAErB,QADS;AAEnBsB,QAAAA,IAAI,EAAEpB;AAFa,OAAf,CAFiC;AAMvCqB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAN8B,KAAjB,CAAL,CAShBC,IATgB,CASXC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATI,CAAnB;AAUArB,IAAAA,QAAQ,CAACU,IAAI,CAACX,KAAN,CAAR;AACD,GAf6B,EAgB9B,CAACF,QAAD,EAAWF,QAAX,CAhB8B,CAAhC;AAmBA,QAAM2B,YAAY,GAAG/B,WAAW,CAACW,KAAK,IAAI;AACxCF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,MAAIuB,MAAJ;;AACA,MAAIxB,KAAJ,EAAW;AACTwB,IAAAA,MAAM,gBACJ,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE1B,QAAhB;AAA0B,MAAA,KAAK,EAAEE,KAAjC;AAAwC,MAAA,YAAY,EAAEuB,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO;AACLC,IAAAA,MAAM,gBACJ,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE5B,QADZ;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,oBAAoB,EAAEI,oBAHxB;AAIE,MAAA,oBAAoB,EAAEI,oBAJxB;AAKE,MAAA,YAAY,EAAEC,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AACD,SAAOiB,MAAP;AACD,CArDD;;AAuDA,eAAe7B,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Lobby from './Lobby';\nimport Room from './Room';\n\nconst VideoChat = () => {\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [token, setToken] = useState(null);\n\n  const handleUsernameChange = useCallback(event => {\n    setUsername(event.target.value);\n  }, []);\n\n  const handleRoomNameChange = useCallback(event => {\n    setRoomName(event.target.value);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async event => {\n      event.preventDefault();\n       console.log('submit');\n      const data = await fetch('/video/token', {\n        method: 'POST',\n        body: JSON.stringify({\n          identity: username,\n          room: roomName\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json());\n      setToken(data.token);\n    },\n    [roomName, username]\n  );\n\n  const handleLogout = useCallback(event => {\n    setToken(null);\n  }, []);\n\n  let render;\n  if (token) {\n    render = (\n      <Room roomName={roomName} token={token} handleLogout={handleLogout} />\n    );\n  } else {\n    render = (\n      <Lobby\n        username={username}\n        roomName={roomName}\n        handleUsernameChange={handleUsernameChange}\n        handleRoomNameChange={handleRoomNameChange}\n        handleSubmit={handleSubmit}\n      />\n    );\n  }\n  return render;\n};\n\nexport default VideoChat;\n"]},"metadata":{},"sourceType":"module"}