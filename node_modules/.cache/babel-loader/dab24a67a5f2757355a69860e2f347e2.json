{"ast":null,"code":"var _jsxFileName = \"/Users/xicheng/lab/git/fv_nav/src/Room.js\";\nimport React, { useState, useEffect } from 'react';\nimport Video from 'twilio-video';\nimport Participant from './Participant';\n\nconst Room = ({\n  roomName,\n  token,\n  handleLogout\n}) => {\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  useEffect(() => {\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n    };\n\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on('participantConnected', participantConnected);\n      room.on('participantDisconnected', participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === 'connected') {\n          currentRoom.localParticipant.tracks.forEach(function (trackPublication) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };\n  }, [roomName, token]);\n  const remoteParticipants = participants.map(participant => /*#__PURE__*/React.createElement(Participant, {\n    key: participant.sid,\n    participant: participant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Room: \", roomName), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Log out\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"local-participant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, room ? /*#__PURE__*/React.createElement(Participant, {\n    key: room.localParticipant.sid,\n    participant: room.localParticipant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }) : ''), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Remote Participants\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"remote-participants\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, remoteParticipants));\n};\n\nexport default Room;","map":{"version":3,"sources":["/Users/xicheng/lab/git/fv_nav/src/Room.js"],"names":["React","useState","useEffect","Video","Participant","Room","roomName","token","handleLogout","room","setRoom","participants","setParticipants","participantConnected","participant","prevParticipants","participantDisconnected","filter","p","connect","name","then","on","forEach","currentRoom","localParticipant","state","tracks","trackPublication","track","stop","disconnect","remoteParticipants","map","sid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Video from 'twilio-video';\nimport Participant from './Participant';\n\nconst Room = ({ roomName, token, handleLogout }) => {\n  const [room, setRoom] = useState(null);\n  const [participants, setParticipants] = useState([]);\n\n  useEffect(() => {\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants =>\n        prevParticipants.filter(p => p !== participant)\n      );\n    };\n\n    Video.connect(token, {\n      name: roomName\n    }).then(room => {\n      setRoom(room);\n      room.on('participantConnected', participantConnected);\n      room.on('participantDisconnected', participantDisconnected);\n      room.participants.forEach(participantConnected);\n    });\n\n    return () => {\n      setRoom(currentRoom => {\n        if (currentRoom && currentRoom.localParticipant.state === 'connected') {\n          currentRoom.localParticipant.tracks.forEach(function(trackPublication) {\n            trackPublication.track.stop();\n          });\n          currentRoom.disconnect();\n          return null;\n        } else {\n          return currentRoom;\n        }\n      });\n    };\n  }, [roomName, token]);\n\n  const remoteParticipants = participants.map(participant => (\n    <Participant key={participant.sid} participant={participant} />\n  ));\n\n  return (\n    <div className=\"room\">\n      <h2>Room: {roomName}</h2>\n      <button onClick={handleLogout}>Log out</button>\n      <div className=\"local-participant\">\n        {room ? (\n          <Participant\n            key={room.localParticipant.sid}\n            participant={room.localParticipant}\n          />\n        ) : (\n          ''\n        )}\n      </div>\n      <h3>Remote Participants</h3>\n      <div className=\"remote-participants\">{remoteParticipants}</div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}