{"ast":null,"code":"var _jsxFileName = \"/Users/xicheng/lab/git/fv_nav/src/pages/Stepperform.js\";\n//imported from material ui demo\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'; // import PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport { Step1, Step2, Step3 } from './Forms'; //const useStyles = makeStyles((theme) => ({\n\nconst styles = theme => ({\n  // added styling from common useStyles from sibling pages.\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 1500,\n    height: 450\n  },\n  subheader: {\n    width: \"100%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}); // duplicate styling to merge examples, should be cleanedup\n\n\nconst useStyles = makeStyles(theme => ({\n  // added styling from common useStyles from sibling pages.\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 1500,\n    height: 450\n  },\n  subheader: {\n    width: \"100%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Select customers', 'Select fields', 'Select programs', 'Config trial', 'Preview', 'Submit proposal'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/React.createElement(Step2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }\n      });\n\n    case 1:\n      return /*#__PURE__*/React.createElement(Step1, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      });\n\n    case 2:\n      return /*#__PURE__*/React.createElement(Step2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 14\n        }\n      });\n\n    case 3:\n      return /*#__PURE__*/React.createElement(Step3, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }\n      });\n\n    case 4:\n      return /*#__PURE__*/React.createElement(Step2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }\n      });\n\n    default:\n      return 'Unknown step';\n  }\n} // form/input as stepContent \n\n\nfunction StepX() {\n  return /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Standard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }\n  });\n}\n\n; // export default function HorizontalLinearStepper()\n\nfunction HorizontalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, steps.map((label, index) => {\n    const stepProps = {};\n    const labelProps = {};\n\n    if (isStepOptional(index)) {\n      labelProps.optional = /*#__PURE__*/React.createElement(Typography, {\n        variant: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 35\n        }\n      }, \"(Optional)\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return /*#__PURE__*/React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StepLabel, Object.assign({}, labelProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }), label));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"Back\"), isStepOptional(activeStep) && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Skip\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n}\n\nfunction Stepperform() {\n  // const { classes } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, \"Form\"), /*#__PURE__*/React.createElement(HorizontalLinearStepper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default withStyles(styles)(Stepperform);","map":{"version":3,"sources":["/Users/xicheng/lab/git/fv_nav/src/pages/Stepperform.js"],"names":["React","makeStyles","Stepper","Step","StepLabel","Button","Typography","CssBaseline","Container","withStyles","TextField","Step1","Step2","Step3","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","subheader","button","marginRight","spacing","instructions","marginTop","marginBottom","useStyles","getSteps","getStepContent","step","StepX","HorizontalLinearStepper","classes","activeStep","setActiveStep","useState","skipped","setSkipped","Set","steps","isStepOptional","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","map","label","index","stepProps","labelProps","optional","completed","length","Stepperform"],"mappings":"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","sourcesContent":["//imported from material ui demo\nimport React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n// import PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport {Step1, Step2, Step3} from './Forms';\n\n//const useStyles = makeStyles((theme) => ({\nconst styles = theme => ({\n    // added styling from common useStyles from sibling pages.\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper\n      },\n      gridList: {\n        width: 1500,\n        height: 450\n      },\n      subheader: {\n        width: \"100%\"\n      },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n});\n\n// duplicate styling to merge examples, should be cleanedup\nconst useStyles = makeStyles((theme) => ({\n\n        // added styling from common useStyles from sibling pages.\n        root: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-around\",\n            overflow: \"hidden\",\n            backgroundColor: theme.palette.background.paper\n          },\n          gridList: {\n            width: 1500,\n            height: 450\n          },\n          subheader: {\n            width: \"100%\"\n          },\n      button: {\n        marginRight: theme.spacing(1),\n      },\n      instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n      },\n    }));\n\nfunction getSteps() {\n  return ['Select customers', 'Select fields', 'Select programs', 'Config trial', 'Preview', 'Submit proposal' ];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <Step2 />;\n    case 1:\n      return <Step1 />;\n    case 2:\n      return <Step2 />;\n    case 3: \n        return <Step3 />;\n    case 4:\n        return <Step2 />;\n    default:\n      return 'Unknown step';\n  }\n}\n\n// form/input as stepContent \nfunction StepX () {\n    return <TextField id=\"standard-basic\" label=\"Standard\" />;\n};\n\n// export default function HorizontalLinearStepper()\nfunction HorizontalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">(Optional)</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            {/* <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography> */}\n            <Container maxWidth=\"lg\">\n                {getStepContent(activeStep)}\n            </Container>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n\n\nfunction Stepperform() {\n    // const { classes } = props;\n  \n    return (\n      <div >\n        <CssBaseline />\n        \n        <Container maxWidth=\"sm\">\n          <h1>Form</h1>\n            <HorizontalLinearStepper />\n        </Container>\n      </div>\n    );\n  }\n  \n  export default withStyles(styles)(Stepperform);"]},"metadata":{},"sourceType":"module"}